function Stirlingtest = importfile6(filename, dataLines)
%IMPORTFILE6 Import data from a text file
%  STIRLINGTEST = IMPORTFILE6(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a table.
%
%  STIRLINGTEST = IMPORTFILE6(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  Stirlingtest = importfile6("/Volumes/Margs_Clone/Pressure_sensor_data/Fremantle_Ports/20210101_Stirling_test.txt", [1, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 02-May-2023 20:09:24

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [1, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 13);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = [" ", ","];

% Specify column names and types
opts.VariableNames = ["time1", "time2", "time3", "Var4", "Var5", "Var6", "Var7", "Var8", "press", "Var10", "Var11", "Var12", "Var13"];
opts.SelectedVariableNames = ["time1", "time2", "time3", "press"];
opts.VariableTypes = ["datetime", "string", "datetime", "string", "string", "string", "string", "string", "double", "string", "string", "string", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";
opts.ConsecutiveDelimitersRule = "join";

% Specify variable properties
opts = setvaropts(opts, ["time2", "Var4", "Var5", "Var6", "Var7", "Var8", "Var10", "Var11", "Var12", "Var13"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["time2", "Var4", "Var5", "Var6", "Var7", "Var8", "Var10", "Var11", "Var12", "Var13"], "EmptyFieldRule", "auto");
opts = setvaropts(opts, "time1", "InputFormat", "yyyy-MM-dd");
opts = setvaropts(opts, "time3", "InputFormat", "HH:mm:ss.SS");

% Import the data
Stirlingtest = readtable(filename, opts);

end